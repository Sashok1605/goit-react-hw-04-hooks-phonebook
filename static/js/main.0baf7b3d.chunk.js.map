{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","contactNumber","contactName","props","some","alert","preventDefault","className","s","form","type","pattern","title","required","onChange","ContactListItem","id","onDeletContact","contactListItem","contact","buttonDelete","onClick","ContactList","list","map","Filter","filter","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","changeFilter","prevState","v4","normalizedFilter","toLowerCase","includes","visibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0baf7b3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__1LOpT\",\"contact\":\"ContactListItem_contact__2NSt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1HA1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1YZl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__11ENf\"};","import { useState } from 'react';\n// import { v4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ contacts, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const findByName = contactName => {\n    return this.props.contacts.some(({ name }) => name === contactName);\n  };\n\n  const findByNumber = contactNumber => {\n    return this.props.contacts.some(({ number }) => number === contactNumber);\n  };\n\n  const handleSubmit = e => {\n    if (findByName(name) && findByNumber(number)) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number, id, onDeletContact }) => (\n  <li className={s.contactListItem}>\n    <p className={s.contact}>\n      {' '}\n      {name}: {number}\n    </p>\n    <button\n      className={s.buttonDelete}\n      type=\"button\"\n      onClick={() => onDeletContact(id)}\n    >\n      Delete\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeletContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeletContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        id={id}\n        name={name}\n        number={number}\n        onDeletContact={onDeletContact}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeletContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.filter}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport './App.css';\nimport { v4 } from 'uuid';\n\nconst App = () => {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const deleteContact = contactId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const formSubmitHandler = ({ name, number }) => {\n    setContacts(prevState => [...prevState, { id: v4(), name, number }]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm contacts={contacts} onSubmit={formSubmitHandler} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={visibleContacts()}\n        onChange={changeFilter}\n        onDeletContact={deleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}